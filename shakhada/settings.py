"""
Django settings for shakhada project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xi7ifj!%5t$iy^c0!^s1f*lucw878u5hdqwzq$goluw6nh$mf6'
STATICFILES_STORAGE = 'cloudinary_storage.storage.StaticCloudinaryStorage'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', 'shakhada-45id.onrender.com', '*']


# Application definition

INSTALLED_APPS = [
    'main',
    'users',
    'request',
    'cloudinary',
    'notifications',
    'cloudinary_storage',
    'social_django',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
        'social_django.middleware.SocialAuthExceptionMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'users.middleware.MaintenanceModeMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shakhada.urls'
MAINTENANCE_MODE = False

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]


WSGI_APPLICATION = 'shakhada.wsgi.application'

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dmo1w8jv3',
    'API_KEY': '389289238549655',
    'API_SECRET': 'o9x3aYhIU-5KscBekBHHeo-m28E',
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'errors.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'shakhada_k275',  # Имя базы данных (Render)
        'USER': 'dasakami',  # Имя пользователя (Render)
        'PASSWORD': 'MiuK5hx7KveJYYMpXChdpZBCi3vYfQQW',  # Пароль (Render)
        'HOST': 'dpg-cvnv8j6mcj7s73b0nl70-a',  # Хост (Render)
        'PORT': '5432',  # Порт (Render)
    }
}

SOCIAL_AUTH_VK_OAUTH2_KEY = '53349114'
SOCIAL_AUTH_VK_OAUTH2_SECRET = '6CPEoAJBAKxTmHxUuD75'
SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email']
SOCIAL_AUTH_VK_OAUTH2_EXTRA_DATA = ['email', 'first_name', 'last_name', 'photo_max_orig', 'username']

SOCIAL_AUTH_VK_OAUTH2_REDIRECT_URI = 'https://shakhada.onrender.com/auth/complete/vk-oauth2/'

# После успешной авторизации пользователь будет перенаправлен сюда
LOGIN_REDIRECT_URL = '/'

# После выхода из системы
LOGOUT_REDIRECT_URL = '/'

# Это дополнительные настройки для обработки авторизации через социальные сети
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/'  # Для успешной авторизации через VK
SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/'  # Если это новый пользователь, то куда перенаправить
SOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'  # Страница ошибки авторизации, если она произошла



SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'users.pipeline.save_vk_extra_data',  # <--- ты создашь эту функцию
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'email',
            'profile',
        ],
        'AUTH_PARAMS': {'access_type': 'online'},
        'OAUTH_PKCE_ENABLED': True,
    },
    'vk': {
        'SCOPE': ['email'],
        'AUTH_PARAMS': {'response_type': 'code'},
    }
}



# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

PORT = os.environ.get('PORT', 10000)

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

if DEBUG:
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')


AUTHENTICATION_BACKENDS = [
    'social_core.backends.vk.VKOAuth2',
    'django.contrib.auth.backends.ModelBackend',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'users.User'
dependencies = [
    ('auth', '0012_alter_user_first_name_max_length'),
]


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# mqucshbqgjqbpzgx
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = '465'
EMAIL_HOST_USER = "den.dasakami@yandex.com"
EMAIL_HOST_PASSWORD = 'mqucshbqgjqbpzgx'
EMAIL_USE_SSL = True

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER
EMAIL_ADMIN = EMAIL_HOST_USER

